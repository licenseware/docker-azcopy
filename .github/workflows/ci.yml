name: ci

concurrency:
  cancel-in-progress: ${{ ! (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) }}
  group: ci-${{ github.ref_name }}-${{ github.event_name }}

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags:
      - "v*"
  schedule:
    - cron: 30 0 */1 * *
  workflow_dispatch:
  release:
    types:
      - published

jobs:
  build-pr:
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      packages: write
    uses: licenseware/infrastructure/.github/workflows/build-docker.yml@v2
    with:
      context: .
      image-name: ghcr.io/${{ github.repository }}
      platforms: linux/amd64,linux/arm64
      push: true
      scout-cves: true
      scout-compare: true
      scout-comment-pr: true
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

  build-edge:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    permissions:
      contents: read
      packages: write
    uses: licenseware/infrastructure/.github/workflows/build-docker.yml@v2
    with:
      context: .
      image-name: ghcr.io/${{ github.repository }}
      platforms: linux/amd64,linux/arm64
      push: true
      scout-cves: true
      scout-compare: false
      scout-comment-pr: false
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

  checks:
    if: contains(fromJSON('["push", "pull_request", "schedule"]'), github.event_name)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run linters
        run: |
          pip install -U pip pre-commit
          pre-commit run -a
      - if: failure() && github.ref_name != 'refs/heads/main'
        name: Commit linting changes
        uses: EndBug/add-and-commit@v9
        with:
          message: "chore: lint ðŸš¨"
          new_branch: ${{ github.head_ref || github.ref_name }}
      - name: Install mypy
        run: |
          pip install -U pip 'mypy<2'
      - name: Run mypy
        run: |
          echo -e "# mypy output\n\n" >> $GITHUB_STEP_SUMMARY
          echo -e "<details><summary>Expand</summary>\n\n\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          mypy | tee -a $GITHUB_STEP_SUMMARY
          echo -e "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo -e "</details>\n\n" >> $GITHUB_STEP_SUMMARY
